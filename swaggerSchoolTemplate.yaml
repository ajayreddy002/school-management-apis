swagger: '2.0'
info:
  version: '1.0'
  title: 'school management'
  description: 'This is swagger ui for school management'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /school-management/school-apis-version1/1.0
schemes:
 - https
 - http
tags: 
- name : school
paths:
  /school:
    post:
      tags:
      - "school"
      summary: Add new School to Db 
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/School"
      responses:
        200:
          description: OK
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
    put:
      tags:
      - "school"
      summary: "Update an existing pet"
      description: ""
      operationId: "updatePet"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "School Object need to update school"
        required: true
        schema:
          $ref: "#/definitions/schoolPut"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
    get:
      tags:
      - "school/:school_id"
      summary: "Get school details by school id"
      description: "Get school details by school id"
      operationId: "school_id"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "school_id"
        in: "path"
        description: "ID of school to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/School"
        400:
          description: "Invalid status value"
    delete:
      tags:
      - "school/:school_id"
      summary: "Delete school by school id"
      description: "Deletion of school based on school id this can be performed by super admin"
      operationId: "schoolId"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "school_id"
        in: "path"
        description: "ID of school to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/School"
        400:
          description: "Invalid status value"
        403:
          description: "Not Authourized"
definitions:
  School:
    type: object
    required: 
      - school_name
      - email
      - password
      - user_name
      - school_address
    properties:
      school_name: 
        type: string
      email:
        type: string
      password:
        type: string
      user_name:
        type: string
      school_address:
        type: string
  schoolPut:
    type: object
    required:
      - school_id
    properties:
      school_name: 
        type: string
      email:
        type: string
      password:
        type: string
      user_name:
        type: string
      school_address:
        type: string
      school_id:
        type: integer